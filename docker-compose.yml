version: "3.8"

services:
  db:
    container_name: postgres_db
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migrate:
    image: alpine
    container_name: migrate
    depends_on:
      - db
    volumes:
      - ./:/app
      - ./wait-for-it/wait-for-it.sh:/wait-for-it.sh
    working_dir: /app
    command: >
      sh -c "
      apk add --no-cache curl postgresql-client &&
      chmod +x /wait-for-it.sh &&
      /wait-for-it.sh db:5432 --timeout=30 --strict -- echo 'Postgres is up' &&
      migrate -path /app/internal/migrations -database postgres://${DB_USER}:${PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable up
      "
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      PASSWORD: ${PASSWORD}

  app:
    container_name: my_booking_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - migrate
      - db
    restart: unless-stopped

volumes:
  postgres_data:
